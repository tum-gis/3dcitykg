plugins {
    // Apply the java-library plugin for API and implementation separation
    id 'java-library'

    // Publish to a repository
    id 'maven-publish'

    // Run main class
    id 'application'

    // Create a fat jar (if needed)
    id 'com.gradleup.shadow' version '9.1.0'
}

// Group and version
group = "org.tum-gis"
version = "1.0.0"

tasks.named("jar") {
    archiveBaseName.set("citykg")
    manifest {
        attributes(
                'Main-Class': 'citykg.app.CityKG'
        )
    }
}

// Java compatibility
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

repositories {
    // Use Maven Central for resolving dependencies
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing
    // testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath
    // api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath
    // implementation 'com.google.guava:guava:31.0.1-jre'

    // https://mvnrepository.com/artifact/org.citygml4j/citygml4j-core
    implementation 'org.citygml4j:citygml4j-core:3.2.1'

    // https://mvnrepository.com/artifact/org.citygml4j/citygml4j-xml
    implementation 'org.citygml4j:citygml4j-xml:3.2.1'

    // https://mvnrepository.com/artifact/org.citygml4j/citygml4j
    implementation 'org.citygml4j:citygml4j:2.13.0'

    // https://mvnrepository.com/artifact/org.citygml4j/citygml4j-cityjson
    implementation 'org.citygml4j:citygml4j-cityjson:3.2.2'

    // https://mvnrepository.com/artifact/org.neo4j/neo4j
    implementation 'org.neo4j:neo4j:5.25.1'

    // https://mvnrepository.com/artifact/com.typesafe/config
    implementation 'com.typesafe:config:1.4.3'

    // https://mvnrepository.com/artifact/uk.co.jemos.podam/podam
    implementation 'uk.co.jemos.podam:podam:8.0.2.RELEASE'

    // https://mvnrepository.com/artifact/com.github.davidmoten/rtree
    implementation 'com.github.davidmoten:rtree:0.12'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-geometry-core
    implementation 'org.apache.commons:commons-geometry-core:1.0'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-geometry-euclidean
    implementation 'org.apache.commons:commons-geometry-euclidean:1.0'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-geometry-spherical
    implementation 'org.apache.commons:commons-geometry-spherical:1.0'

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation 'ch.qos.logback:logback-classic:1.5.12'
}

configurations.all {
    exclude group: "org.neo4j", module: "neo4j-slf4j-provider"
}

// Application main class & JVM args
application {
    mainClass.set("citykg.app.CityKG")

    applicationDefaultJvmArgs = [
            "-Xms8g", "-Xmx16g",
            "--add-opens", "java.base/java.lang=ALL-UNNAMED",
            "--add-opens", "java.base/java.lang.ref=ALL-UNNAMED",
            "--add-opens", "java.base/java.lang.reflect=ALL-UNNAMED",
            "--add-opens", "java.base/java.nio=ALL-UNNAMED",
            "--add-opens", "java.base/java.io=ALL-UNNAMED",
            "--add-opens", "java.base/java.time=ALL-UNNAMED",
            "--add-opens", "java.base/java.util=ALL-UNNAMED",
            "--add-opens", "java.base/java.util.concurrent=ALL-UNNAMED",
            "--add-opens", "java.base/jdk.internal.loader=ALL-UNNAMED",
            "--add-opens", "java.base/jdk.internal.ref=ALL-UNNAMED",
            "--add-opens", "java.base/sun.net.www.protocol.http=ALL-UNNAMED",
            "--add-opens", "java.base/sun.nio.ch=ALL-UNNAMED",
            "-Dlogback.configurationFile=config/logback.xml"
    ]
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-Xlint:none")
    options.release.set(17)
}

// Repository to publish
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = "citykg"
        }
    }

    repositories {
        maven {
            name = "local"
            url = layout.buildDirectory.dir("repo")
        }
    }
}

tasks.named("shadowJar") {
    archiveBaseName.set("3dcitykg")
    archiveVersion.set("1.0.0")
    destinationDirectory.set(project.rootDir)
    setProperty("zip64", true)

    manifest {
        attributes('Main-Class': 'citykg.app.CityKG')
    }

    dependencies {
        exclude(dependency("org.neo4j:arrow-bom"))
    }

    // Exclude specific files from the archive
    exclude('**/META-INF/*.RSA', '**/META-INF/*.SF', '**/META-INF/*.DSA')

    configurations = [project.configurations.runtimeClasspath]
}
