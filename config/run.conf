# USE CASE
# 0: Map only using the configurations in this file
# 1: Export only using an existing database configured in this file
# 2: Map AND Export using the configurations in this file
case = 2

# DATABASE CONFIGURATIONS
# .......................

# Database location
db.path = "output/neo4jDB"

# Database name
db.name = "neo4j"

# Number of database transactions to be processed before committing
db.batch.size = 1000

# MAPPER CONFIGURATIONS
# .....................

# Input dataset to map onto graphs, can have multiple files/directories
# If a path is a directory, ALL files in that folder shall be imported as one
# The first path will be mapped to partition index 0
# The second to partition index 1, and so on
mapper.dataset.paths = [
  "input/citygml/fzk_haus_lod2_v2.gml"
]

# Do not map the following vertex classes (e.g. com.example.project.Class)
# This can be a super class, such as "java.lang.Object" will exclude ALL objects
mapper.exclude.vertex.classes = []

# Do not map the following edge types
mapper.exclude.edge.types = [
  "this$0", # used for inner classes
  "associableClass", "cityGMLClass", "gMLClass", "module", "parent" # used for CityGML objects
]

# Max. wait time in seconds for mapper threads to finish
mapper.concurrent.timeout = 360000

# Batch size for top-level features
mapper.toplevel.batch.size = 10

# NEO4J CONFIGURATIONS
# ....................

# Config file path
neo4j.config.file = "config/neo4j.conf"

# Plugins
neo4j.plugin.path = "plugins"

# Store RTree in database (true) or in-memory only (false)
neo4j.rtree.store = true

# Folder location for RTree footprint imagee
neo4j.rtree.img.path = "output/img"

# CITYGML CONFIGURATIONS
# ......................

# CityGML version (v1_0, v2_0, v3_0)
citygml.version = "v2_0"
# OR CityJSON (true, false)
cityjson = false

# CityGML export
citygml.export.partition = 0
# minx, miny, minz, maxx, maxy, maxz  (leave the bbox empty to export entire city model)
citygml.export.bbox = ""
citygml.export.path = "output/citygml/export_v2.gml"
